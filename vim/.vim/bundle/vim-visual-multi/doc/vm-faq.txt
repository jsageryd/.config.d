*vm-faq.txt*    Version 0.3.0    Last change: June 15 2019

FREQUENTLY ASKED QUESTIONS                                   *visual-multi-faq*
===============================================================================
                                                                *vm-faq-errors*
VM has quit with errors and I can't clear VM highlight matches.~

Run |:VMClear|

-------------------------------------------------------------------------------
                                                              *vm-faq-mappings*
I want to remap the main VM mappings.~

You have to initialize the mappings dictionary and replace individual mappings
with your own. Below there are some examples.

For a full list of mappings and other informations, see |vm-mappings.txt|.
>
  let g:VM_maps = {}
  let g:VM_maps['Find Under']         = '<C-d>'   " replace C-n
  let g:VM_maps['Find Subword Under'] = '<C-d>'   " replace visual C-n
  let g:VM_maps["Add Cursor Down"]    = '<M-j>'   " new cursor down
  let g:VM_maps["Add Cursor Up"]      = '<M-k>'   " new cursor up
  let g:VM_maps["Exit"]               = '<Space>' " quit VM

To disable a specific mapping, set it to an empty string:
>
  let g:VM_maps["Select Operator"]    = ''
<
-------------------------------------------------------------------------------
                                                             *vm-faq-functions*
How can I do something before VM starts, or after VM ends? ~

You can create these functions: >
  function! VM_Start()
  function! VM_Exit()
<
Or you can rely on a user autocommand:  >
  autocmd User visual_multi_start   call MyVmStart()
  autocmd User visual_multi_exit    call MyVmExit()
<
If you want to override some VM mapping (and you know what you're doing), this
autocommand is triggered after mappings have been set:
>
  autocmd User visual_multi_mappings  call MyVmMappings()

-------------------------------------------------------------------------------
                                                      *vm-faq-disable-mappings*
How can I temporarily disable VM mappings? ~

VM has a <Plug> for that. Normally it is bound to |VM_leader| + <Space>, but
unless you use <Space> as |VM_leader|, you may prefer an easier mapping:
>
  let g:VM_maps["Toggle Mappings"] = '<Space>'
<

-------------------------------------------------------------------------------
                                                                 *vm-faq-remap*
How can I remap x in VM? ~

There are several ways: either do a remap using the functions described above,
e.g.:
>
  function! VM_Start()
    nmap <buffer> <C-C> <Esc>
    imap <buffer> <C-C> <Esc>
  endfunction

  function! VM_Exit()
    nunmap <buffer> <C-C>
    iunmap <buffer> <C-C>
  endfunction
<
or check one of the following settings:

  |g:VM_custom_remaps|
  |g:VM_custom_noremaps|
  |g:VM_custom_motions|


-------------------------------------------------------------------------------
                                                       *vm-faq-search-register*

How to start VM with matches from current search register? ~

So you typed a pattern with / or ?, and now you want to reuse it in VM.
You can start VM in regex mode (default mapping: `\\/`), press <Up><CR> to set
last pattern, then select all (default mapping: `\\A`).

But this won't work if you set the |quote/| register via |:let|.

Just use this command:

  |:VMFromSearch|   (with ! to select all matches)

-------------------------------------------------------------------------------
                                                       *vm-faq-custom-mappings*
Can I have a mapping for...? ~

If you find yourself repeating a certain action, you can create mappings like:
>
  nmap cp vip<Plug>(VM-Visual-Cursors)
<
This would create a column of cursors that spans the current inner paragraph.
>
Obviously you can just use keys rather than plugs:
>
  nmap  cp vip\\c
<

 vim: ft=help et sw=2 ts=2 sts=2 tw=79
